"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=g=fqnfey6-3pn3@1)&wj@5)ym3%9*b%&k9q%zbof()8-*ox%z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["localhost"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'testbed_api',
    'frontend',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'server.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Logging
LOG_DIR = BASE_DIR / 'logs'
MAIN_LOG = LOG_DIR / 'main.log'
ERROR_LOG = LOG_DIR / 'error.log'
TESTBED_LOG = LOG_DIR / 'testbed.log'
REDIS_LOG = LOG_DIR / 'redis.log'

LOG_FILES = [MAIN_LOG, ERROR_LOG, TESTBED_LOG]

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "%(asctime)s: %(name)s|%(module)s>%(funcName)s>%(lineno)d: %(levelname)s : %(message)s",
            "datefmt": "%Y-%m-%dT%H:%M:%SZ"
        }
    },
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
        "file": {
            "class": "logging.FileHandler",
            "filename": MAIN_LOG,
            "mode": "a",
            "formatter": "verbose",
        },
        "error": {
            "class": "logging.FileHandler",
            "filename": ERROR_LOG,
            "mode": "a",
            "formatter": "verbose",
            "level": "WARNING",
        },
        "testbed": {
            "class": "logging.FileHandler",
            "filename": TESTBED_LOG,
            "mode": "a",
            "formatter": "verbose",
        },
    },
    "root": {
        "handlers": ["console", "file", "error"],
        "level": "DEBUG" if DEBUG else "INFO",
    },
    "loggers": {
        "testbed": {
            "handlers": ["console", "file", "error", "testbed"],
            "propagate": False,
            "level": "DEBUG" if DEBUG else "INFO",
        },
    },
}


TESTBED_CAMERA_INDEX = 1
TESTBED_SERIAL_PORT = 'COM7'
TESTBED_OUTPUT_ENABLED = False

TESTBED_DEBUG = DEBUG and True
TESTBED_MOCK_CAMERA = TESTBED_DEBUG and False
TESTBED_MOCK_SIGNALS = TESTBED_DEBUG and False
