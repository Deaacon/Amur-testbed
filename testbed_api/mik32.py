import os
import sys
import shutil
import subprocess

PIO_EXECUTABLE_PATH = shutil.which("/Users/ax-sayfulin/.platformio/penv/bin/pio")
FILE_PATH = os.path.dirname(__file__)
PIO_PROJECT_PATH = os.path.join(FILE_PATH, 'platformio_project')
SOFTWARE_SOURCE_PATH = os.path.join(PIO_PROJECT_PATH, "src/demo.c")
SOFTWARE_BINARY_PATH = os.path.join(PIO_PROJECT_PATH, ".pio/build/mik32v0/firmware.hex")
DEMO_HEX = b""":020000040200F8
:100000003741000213010100B7110002938101A5DD
:10001000B7150002938505A537160002130606A53D
:10002000B7160002938606A539A083A2050023A077
:10003000560091059106E3EAC5FEB71500029385C7
:1000400005A537160002130606A521A023A005006A
:100050009105E3EDC5FEA1423703050013034301FB
:1000600023205300B7000002E7802008B7000002F9
:10007000E7802008B7000002E780602A7300501074
:10008000F5BF8280000000000000000000000000BA
:100090000000000000000000000000000000000060
:1000A0000000000000000000000000000000000050
:1000B0000000000000000000000000000000000040
:1000C0006F004000197106C20AC40EC612C816CAD3
:1000D0001ACC1ECE22D026D22AD42ED632D836DA48
:1000E0003ADC3EDEC2C0C6C2CAC4CEC6D2C8D6CA78
:1000F000DACCDECEE2D0E6D2EAD4EED6F2D8F6DA28
:10010000FADCFEDE970000009380E00482909240CB
:100110002241B2414242D2426243F24302549254DB
:100120002255B2554256D2566257F2570648964863
:100130002649B649464AD64A664BF64B065C965C5B
:10014000265DB65D465ED65E665FF65F096173004A
:10015000203001A01303F00013070500637EC302E3
:100160009377F7006390070A63920508937606FF7A
:100170001376F600B386E6002320B7002322B700EB
:100180002324B7002326B70013070701E366D7FE31
:100190006314060067800000B306C34093962600F0
:1001A00097020000B38656006780C6002307B70099
:1001B000A306B7002306B700A305B7002305B700C1
:1001C000A304B7002304B700A303B7002303B700B9
:1001D000A302B7002302B700A301B7002301B700B1
:1001E000A300B7002300B7006780000093F5F50F68
:1001F00093968500B3E5D50093960501B3E5D50048
:100200006FF0DFF69396270097020000B386560042
:1002100093820000E78006FA93800200938707FF2D
:100220003307F7403306F600E378C3F66FF0DFF3E9
:100230005D71130680028145280886C6213FBD47AF
:10024000230CF1008947230EF1003ED2E17793871A
:1002500007082C080A85231AF102112FB6406161A4
:100260008280011106CE22CC02C402C6B707050067
:100270000567D8CF0967D8CF1167D8CF4167D8CFE6
:10028000214485478A853745080022C03EC225297A
:10029000374508008A851305054022C02D21F2400C
:1002A000624405618280011106CE22CC26CA4937FC
:1002B0004D3F3715080001478146214693056011DF
:1002C000130505406520B7470F0002C49387F72345
:1002D000224763DDE70237150002130585A3B74403
:1002E00008006164D126938404401304F469A14595
:1002F00037450800D121A14526857D2902C6B24790
:10030000E347F4FEB24785073EC6D5BF224705073F
:100310003AC47DBF0111B717080006CE02C202C45D
:1003200002C6938707406310F502B7070500094727
:10033000D8CF930700063EC08A853745080061265E
:10034000F24005618280B727080093870780E31990
:10035000F5FEB70705001147D8CF374508009307CA
:1003600000303EC08A8513050540D1BF011122CC63
:100370002EC62A8406CE32C436C23AC0613FB24588
:10038000BD47014563F0B7042320040092464CC4E6
:100390002246FD5702475CCC54C09367160018C430
:1003A000937646001CC0218A5C4C054581C613D556
:1003B0006701058919C6014701C5D58313F71700E1
:1003C0003A857DD1F240624405618280484D1981B1
:1003D00005898280411122C406C62A842285FD3700
:1003E00075DDB24022444101828093170501371523
:1003F0000800C183130505401CD5E9BF411122C483
:1004000006C62A840305040009E5B24022444101DE
:1004100082800504D93FFDB75971A6D2D2CCD6CA85
:10042000DAC8DEC6E2C4E6C286D6A2D4CAD0CECE30
:10043000EAC06EDE2A87AE84130A5002930A0003D4
:10044000130BA002930BC004130C0002A94C03056C
:100450000700630C052213091700631C451383076B
:100460001700639D570713093700830727000547C7
:100470006393670B80409386440063550400330404
:100480008040094783070900B684050993F6F7FD04
:1004900063977601830709001367470005096386A0
:1004A000071E13060006BE866356F600938607FEF7
:1004B000E206E1861306F0046380C60E6340D606AA
:1004C000130630046380C60C130640046388C60E0E
:1004D00013062004639EC60A8945C1A09306D00274
:1004E0006386D70013092700014759B7130937005E
:1004F000830727000947ADBF3304940305093E94E1
:100500008307F9FF130404FD938607FD93F6F60FA6
:10051000E374D6FEA5BF01442546FDB7130650057A
:10052000638EC60813068005638CC6081306300563
:100530006390C6069389440003AD04008144B30769
:100540009D00838707009386140099EF098B938D94
:10055000140001E763EC8400EE846A85453563EEA0
:100560008400CE844A87E5B5B684D1BF1305000266
:100570003AC2A53DEE841247D9BF13050002B53536
:100580008504F1BF0385040093894400B93DD1BFC0
:100590003E85A13DA689F1B7A14513764700938911
:1005A00044000DC21305400490406394A6026352B8
:1005B00006023306C0401367070121A8A945F1BF11
:1005C000C145E1BF130640046394C6009040C5B71F
:1005D0009040130580079D466394A7009306700220
:1005E00013F5F60F14088147368D254EB378B60201
:1005F0003353B6023308150163661E011398880150
:10060000135888411308080323800601938D1700AF
:100610006367B60085061A86639D8D05FD47937650
:10062000070189CA1418B69D9306D0022380DDFE07
:10063000938D2700937717009306000399E39306A1
:100640000002EE84937727001387140081E763E4A8
:100650008402BA84FD1D3307BD0103050700713311
:10066000E39A0DFEE3FF84EE13050002BD3B850413
:10067000D5BFEE87A5BF36853EC63AC436C2B53370
:100680002247B2479246BA84C1B7B6502654965410
:100690000659F649664AD64A464BB64B264C964C06
:1006A000064DF25D6561828039712ED24C1006CE06
:1006B00032D436D63AD83EDA42DC46DE2EC6A93BE4
:1006C000F2402161828037470800930707406308A2
:1006D000F508B757080093870780630AF50A630196
:1006E000E50C05473A858280331EDF003377DE0153
:1006F00039CF83A3450013981600904333970F0119
:100700001347F7FF13F43300798E33140401418E3D
:1007100090C3638753006397E3012324C50119A0A5
:100720002326C50103A6080003AEC500798E331E3B
:100730000E013366C60123A0C80003260300718F93
:10074000904533180601336707012320E30085062F
:1007500033D7DE0051FB32443A8541018280B7171E
:1007600005001383C7C1938807C1938747C083AE31
:1007700005008146054F8D4F954233D7DE003DD3AE
:10078000331EDF003377DE010DE78506FDB7B717AF
:100790000500138307C2938847C1938787C0C1BFF1
:1007A000B7170500138387C19388C7C0938707C015
:1007B0007DBF411122C635BF1C49BD8D0CC9828049
:1007C00085476305F50211C58947630FF5040545A3
:1007D0008280B7060600DC4A7D771307F73FF98F62
:1007E000DCCA82807D1719EB0D458280930600409C
:1007F00037A7070013070712370605001C5EE98FAD
:10080000F5D3370606005C4A7D771307F73FF98F6B
:10081000D58F41115CCA02C613073006B24763592F
:10082000F700014541018280856793860780C9B73B
:10083000B24785073EC6DDB789476308F50263E81E
:10084000A700854711476304F5020545828091475B
:100850006305F504A147E31AF5FE0947094501A818
:10086000FD1781EFC8D20D45828021470145B7A70A
:10087000070093870712B7060500905E798E6DD248
:100880008A054D8D4111C8D202C613073006B24702
:100890006358F70001454101828005470D45C1BFFE
:1008A000B24785073EC6E5B785476305F50211C522
:1008B00089476301F50605458280B70606009C4A14
:1008C0007D771307F73FF98F9CCA82807D1719EB5C
:1008D0000D4582809306004037A7070013070712D3
:1008E000370605001C5EE98FF5D3370706001C4B61
:1008F0007D761306F63FF18FD58F1CCB85471CCF35
:10090000411102C613073006B2476359F70001458B
:10091000410182808567938607807DBFB247850746
:100920003EC6DDB711C98547630DF50205458280D6
:10093000FD1791EB0D4582800946B7A70700938705
:100940000712B7060500985E718F7DD34111C8D696
:1009500002C613073006B2476357F700014541014D
:1009600082800546D9BFB24785073EC6EDB7011163
:1009700026CAB7040600DC4806CE22CC4AC84EC6BA
:1009800052C456C2F19BDCC89C482A89C845F19BD9
:100990009CC883C7C5012E848A07DCC883C7D501DC
:1009A0008A079CC8313D0C44AA8A03454400693536
:1009B0001848B70705002A8A98C358480850D8C372
:1009C000184C98C7D535AA894850A93F83470400D9
:1009D00013F7170009E7D84813672700D8C813F79B
:1009E000270019E7B7060600D84A13671700D8CAC8
:1009F00013F7470019E7B7060600984A1367270060
:100A000098CAA18B99E7370706001C4B93E717009C
:100A10001CCBF240624423205901232249012324A4
:100A200039012326A900D2444A85B2494249224AC3
:100A3000924A05618280000054657374204D65738D
:100A4000736167650A484148410A000000000000E0
:0400000502000000F5
:00000001FF
"""


class TestbedError(Exception):
    pass


class UploadError(TestbedError):
    pass


def upload(software: bytes) -> bool:
    with open(SOFTWARE_SOURCE_PATH, mode='wb') as f:
        f.write(software)
    import os
    import sys
    print(f"UPLOAD AT {__file__} {__name__} {os.getcwd()} {sys.executable} {sys.exec_prefix}")
    proc = subprocess.Popen(
        ['pio', 'run', '--target', 'upload', '--verbose'],
        # [PIO_EXECUTABLE_PATH, '--help'],
        stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE,
        # stdin=sys.stdin, stdout=sys.stdout, stderr=sys.stderr,
        cwd=PIO_PROJECT_PATH,
    )
    out, err = proc.communicate(timeout=100)
    if proc.returncode != 0 or True:
        output = (out + err).decode(errors='ignore')
        raise UploadError(output)
    return True


if __name__ == '__main__':
    upload(DEMO_HEX)
